[package]
name = "mac-linux-kvm"
version = "0.1.0"
edition = "2021"
# Enterprise-level KVM interface specifically for MacOS to Linux servers
description = "Secure KVM interface for MacOS to Linux servers"
repository = "https://github.com/yourusername/mac-linux-kvm"
license = "MIT OR Apache-2.0"
readme = "README.md"
categories = ["virtualization", "security"]
keywords = ["kvm", "virtualization", "security", "linux", "macos"]
authors = ["Your Name <your.email@example.com>"]

# Core Operational Dependencies
[dependencies]
# Async Runtime - Essential for handling multiple server connections
tokio = { version = "1.32", features = ["full"] }
async-trait = "0.1.73"  # For async trait implementations in the KVM interface
futures = "0.3.28"

# Error Handling
anyhow = "1.0"
thiserror = "1.0"

# Serialization
serde = { version = "1.0.188", features = ["derive"] }
serde_json = "1.0.107"

# Logging and Metrics
tracing = { version = "0.1", features = ["attributes"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
metrics = "0.21.1"      # Performance metrics
metrics-exporter-prometheus = "0.12.1"

# Security Layer - Critical for enterprise-level security
rustls = { version = "0.21", features = ["dangerous_configuration"] }
rustls-pemfile = "1.0"
ring = "0.17"
chacha20poly1305 = "0.12"
zeroize = { version = "1.6", features = ["zeroize_derive"] }
mlock = "0.1"
uuid = { version = "1.4", features = ["v4", "serde"] }

# System Information
sysinfo = "0.29"
directories = "5.0"
which = "4.4.0"

# Graphics and Display
pixels = "0.13.0"
winit = "0.28.7"
x11rb = { version = "0.12.0", features = ["all-extensions"] }  # X11 protocol
cocoa = { version = "0.25.0", features = ["exception"] }
core-graphics = { version = "0.23.1" }  # MacOS graphics handling
core-foundation = "0.9.3"  # MacOS system integration

# VNC Support
vnc = "0.4.0"           # VNC protocol implementation
vnc-client = "0.4.0"    # VNC client capabilities

# Process Management
nix = "0.26.4"
libc = "0.2"

# Cryptography
x509-parser = "0.15"

# Security (vendored to avoid external dependencies)
openssl = { version = "0.10", features = ["vendored"] }

# Native MacOS frameworks
core-foundation = "0.9"
core-graphics = "0.23"
security-framework = "2.9"

[dev-dependencies]
# Testing Framework - Enterprise-grade testing
tokio-test = "0.4.3"    # Async testing
mockall = "0.11.4"
criterion = { version = "0.5.1", features = ["async_tokio"] }  # Performance benchmarking
test-case = "3.1.0"     # Test case management
proptest = "1.2.0"

# Development Tools
clippy = "0.0.302"
rustfmt-nightly = "1.5.1"

[build-dependencies]
# Build Script Dependencies
cc = "1.0"
pkg-config = "0.3"
bindgen = "0.68"

[features]
default = ["secure-memory", "mtls"]
secure-memory = []
mtls = []
hardware-security = []

[profile.release]
opt-level = 3           # Maximum optimization
lto = true             # Link-time optimization
codegen-units = 1      # Maximum optimization potential
panic = "abort"        # Minimal binary size
strip = true          # Remove debug symbols
debug = false         # No debug information in release

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.security]
audit = { enabled = true, critical-only = true }
deny = { unmaintained = true, unsound = true }

[[bench]]
name = "performance"
harness = false

[workspace]
members = [
    "crates/*"
]

[patch.crates-io]
# Add any necessary patches here

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.9.3"
core-graphics-types = "0.1.2"

[target.'cfg(target_os = "linux")'.dependencies]
x11 = "2.21.0"
xcb = "1.2.2" 